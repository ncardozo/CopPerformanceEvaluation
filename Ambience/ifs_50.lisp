(defun if-test (mode)
  (cond 
    ((eq mode 0) 0) 
    ((eq mode 1) 1) 
    ((eq mode 2) 2) 
    ((eq mode 3) 3) 
    ((eq mode 4) 4) 
    ((eq mode 5) 5) 
    ((eq mode 6) 6) 
    ((eq mode 7) 7) 
    ((eq mode 8) 8) 
    ((eq mode 9) 9) 
    ((eq mode 10) 10) 
    ((eq mode 11) 11) 
    ((eq mode 12) 12) 
    ((eq mode 13) 13) 
    ((eq mode 14) 14) 
    ((eq mode 15) 15) 
    ((eq mode 16) 16) 
    ((eq mode 17) 17) 
    ((eq mode 18) 18) 
    ((eq mode 19) 19) 
    ((eq mode 20) 20) 
    ((eq mode 21) 21) 
    ((eq mode 22) 22) 
    ((eq mode 23) 23) 
    ((eq mode 24) 24) 
    ((eq mode 25) 25) 
    ((eq mode 26) 26) 
    ((eq mode 27) 27) 
    ((eq mode 28) 28) 
    ((eq mode 29) 29) 
    ((eq mode 30) 30) 
    ((eq mode 31) 31) 
    ((eq mode 32) 32) 
    ((eq mode 33) 33) 
    ((eq mode 34) 34) 
    ((eq mode 35) 35) 
    ((eq mode 36) 36) 
    ((eq mode 37) 37) 
    ((eq mode 38) 38) 
    ((eq mode 39) 39) 
    ((eq mode 40) 40) 
    ((eq mode 41) 41) 
    ((eq mode 42) 42) 
    ((eq mode 43) 43) 
    ((eq mode 44) 44) 
    ((eq mode 45) 45) 
    ((eq mode 46) 46) 
    ((eq mode 47) 47) 
    ((eq mode 48) 48) 
    ((eq mode 49) 49) 
    ((eq mode 50) 50) 
)) 

(defvar beginning-time 0) 
(defvar num 0) 
 
(defun testContexts () 
    (let ((res 0)) 
    (setq beginning-time (get-internal-real-time))
    (loop for i from 0 to 1000
      do (setq num (+ (random 50) 1))
      (loop for j from 1 to 100
        do (if-test num)))
      (setq res (- (get-internal-real-time) beginning-time))
      res))

(defvar elapsed-time -1)
(defvar filename "")
 
(defun ifs-runs (run)
  (setq filename (format nil "runs_ifs/50/test~d.csv" run))
  (with-open-file (str filename
                    :direction :output
                    :if-exists :supersede
                    :if-does-not-exist :create)
    (format str "Iteration, Elapsed time in milliseconds ~%")
      (loop for times from 1 to 100
        do (setq elapsed-time (testContexts))
        (format str "~d, ~d~%" times elapsed-time))))

(defun main ()
  (loop for run from 1 to 10
    do (ifs-runs run)))
